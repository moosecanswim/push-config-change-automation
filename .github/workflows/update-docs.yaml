
name: Create PR to update helm versions

on:
  push:
    branches:
      - actions

jobs:
  get-current-chart-release-versions:
    name: Get current helm chart release versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      # Install Helm for dependencies
      - name: Install Helm
        uses: azure/setup-helm@v1
        id: install-helm

      - name: Get current latest helm releases and build chart-versions.json
        env:
          REPO_NAME: greymatter
          REPO_URL: https://greymatter-io.github.io/helm-charts
        run: |
          helm repo add $REPO_NAME $REPO_URL
          helm repo update

          # Note: this pulls in all charts hosted at the "greymatter" repo we just added
          helm search repo $REPO_NAME/ -o json | jq '.[] | {(.name): (.version)}' | jq -n '[inputs] | add' >> chart-versions.json
          sed -i -e "s/$REPO_NAME\///g" chart-versions.json
          sed -i -e 's/agent/spire_agent/g' chart-versions.json
          sed -i -e 's/server/spire_server/g' chart-versions.json
          cat chart-versions.json

      - name: Export chart versions
        uses: actions/upload-artifact@v2
        with:
          name: chart-versions
          path: chart-versions.json
  
  create_pr:
    name: Create PR to update book.json with new values
    needs: get-current-chart-release-versions
    runs-on: ubuntu-latest
    steps:
      - name: Pull in chart-versions.json from prior step
        uses: actions/download-artifact@v2
        with:
          name: chart-versions

      - name: Update book.json and push to gitbook
        run: | 
          

          # ------------Source Desired Envvars from chart-versions artifact ---------------------
          export "FABRIC_VERSION=$(cat chart-versions.json | jq -r '.fabric')"
          export "SENSE_VERSION=$(cat chart-versions.json | jq -r '.sense')"
          export "EDGE_VERSION=$(cat chart-versions.json | jq -r '.edge')"
          export "SECRETS_VERSION=$(cat chart-versions.json | jq -r '.secrets')"
          export "SPIRE_AGENT_VERSION=$(cat chart-versions.json | jq -r '.spire_agent')"
          export "SPIRE_SERVER_VERSION=9.9.9"

          # ------------Set up Git and Git Variables ---------------------
          TARGET_REPO=github.com/moosecanswim/test-config-change-automation.git
          git config --global user.email "62956126+helm-charts@users.noreply.github.com"
          git config --global user.name $GITHUB_ACTOR
          
          SHORT_DATE="$(date +"%Y-%m-%d")"
          LONG_DATE="$(date '+%d%m%Y%H%M%S')"
          BRANCH_NAME=$(echo ${GITHUB_REF}| awk -F/ '{print $3}')
          NEW_FEATURE_BRANCH_NAME="chart-increment/${BRANCH_NAME}-${LONG_DATE}"
          commit_message="${SHORT_DATE}: Automatic publish from helm-charts repo.  Incrementing Chart versions in book.json"

          git clone -o upstream https://${TARGET_REPO}
          
          cd test-config-change-automation
          git remote add origin https://${TARGET_REPO}
          

          # ------------Business logic---------------------
          
          cp book.json old-book.json

          # update book.json with the latest versions
          sed -i -e "s|\"fabric\":.*|\"fabric\": \"$FABRIC_VERSION\",|" book.json
          sed -i -e "s|\"sense\":.*|\"sense\": \"$SENSE_VERSION\",|" book.json
          sed -i -e "s|\"edge\":.*|\"edge\": \"$EDGE_VERSION\",|" book.json
          sed -i -e "s|\"secrets\":.*|\"secrets\": \"$SECRETS_VERSION\",|" book.json
          sed -i -e "s|\"spire_agent\":.*|\"spire_agent\": \"$SPIRE_AGENT_VERSION\",|" book.json
          # this is the last one in book.json so there is not comma
          sed -i -e "s|\"spire_server\":.*|\"spire_server\": \"$SPIRE_SERVER_VERSION\"|" book.json

          echo "The new book.json: "
          cat book.json
          set -x
          r=$(diff old-book.json book.json) || true
          echo "$r"
          if [[ ! -z $r ]]; then
            # ------------Git logic---------------------

            git checkout -b ${NEW_FEATURE_BRANCH_NAME}
            git remote set-url origin  https://${GITHUB_ACTOR}:${{ secrets.deploy_token }}@${TARGET_REPO}
            git add book.json
            git commit -m "${commit_message}"
              echo "The chart versions have changed. so we will be creating a pr"
              git push --set-upstream origin ${NEW_FEATURE_BRANCH_NAME}

              # This works.  let it be.
              echo "${{ secrets.deploy_token }}" > token.txt
              gh auth login --with-token < token.txt
              gh pr create --fill
            else
              echo "There have not been any changes to the versions so we will not update the mesh"
          fi